{"api-documentation":"The _dfuse_ API has 2 parts: a Websockets-based API dubbed `eosws`,\nand a REST API.\n\n* [Authentication](#authentication)\n* [Websockets-based API](#websockets-based-api)\n    * [Messages format](#messages-format)\n    * [Requests](#ws-requests)\n* [REST API](#rest-api)\n","authentication":"First, get a Free API Key (a JWT).\n\n* Websocket: pass the token as a _query parameter_ named `token`. Example:\n\n```\nws wss://mainnet.eos.dfuse.io/v1/stream?token=eyJ..YOURTOKENHERE...\n```\n\n* REST: pass your token in the `Authorization` header, as a _Bearer_. Example:\n\n```\nGET /v1/table_snapshot\nHost: api.mainnet.eos.dfuse.io\nAuthorization: Bearer eyJ..YOURTOKENHERE...\n```\n\n**WARN**: An `Origin` header is required when doing a websockets\n  connection to our endpoints.\n","message-format":"All requests are formed with these parameters, where `type` is the\ntype of the request, and `req_id` is a token referred to by future\ncommands (client or server).\n\n```\n{\"type\": \"[REQUEST_NAME]\"`,\n \"req_id\": \"some-string-of-your-choosing\",\n ...\n}\n```\n\nThese parameters are available for most commands (unless otherwise noted):\n\n* `type` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** The type of the message. See [Requests](#requests) below.\n* `req_id` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)?** An ID that you want sent back to you for any responses related to this request.\n* `start_block` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)?** Block at which you want to start processing.  It can be an absolute block number, or a negative value, meaning how many blocks from the current head block on the chain. Ex: `-2500` means 2500 blocks in the past, relative to the head block.\n* `fetch` **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)?** Whether to fetch an initial snapshot of the requested entity.\n* `listen` **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)?** Whether to start listening on changes to the requested entity.\n* `data` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** A free-form object, specific to the `type` of request. See below.\n* `with_progress` **[number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)?** Frequency of the progress of blocks processing (within the scope of a `req_id`). You will, at a maximum, receive _one_ notification each 250 milliseconds (when processing large amounts of blocks), and when `blockNum % frequency == 0`. When you receive a progress notification associated with a stream (again, identified by its `req_id`), you are guaranteed to have seen all messages produced by that stream, between the previous `progress` notification and the one received (inclusively).\n","rest-api":"The REST API includes:\n\n* Fetching snapshots of any table on the blockchain, at any block height.\n* Submit transactions and wait for block inclusion before returning\n  with the traces of the block which included it\n* Submit transactions and wait for block irreversibility before\n  returning, along with the execution traces of the irreversible\n  block.\n* Getting scores of reversibility for a given transaction ID.\n","websockets-based-api":"The websockets-based API fuses batch processing and streaming\ncapabilities, to give you one single endpoint with strong guarantees.\n\nMost operations can fetch a first state (with `fetch = true`), and\nstream subsequent changes (with `listen = true`).\n","ws-requests":"### `get_actions` Request\n\nRetrieve a stream of actions, filtered by `receiver` and `account`\n\n```json\n{\"type\": \"get_actions\",\n \"listen\": true,\n \"data\": {\n    \"account\": \"eosio.token\",\n    \"action_name\": \"transfer\",\n }}\n```\n\n`data` fields:\n* `account` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** Contract account targeted by the action.\n* `receiver` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)?** Specify the receiving account executing its smart contract. If left blank, defaults to the same value as `account`.\n* `action_name` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)?** Name of the action called within the `account` contract.\n* `with_db_ops` **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)?** Stream changes to the database tables produced by each action.\n* `with_ram_costs` **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)?** Stream RAM billing changes and reasons for costs of storage produced by each action.\n* `with_inline_traces` **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)?** Stream the inline actions produced by each action.\n* `with_deferred` **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)?** Stream the modifications to deferred transactions produced by each action.\n\n\n### `get_transaction` Request\n\nRetrieve a transaction and follow its life-cycle. BETA: some life-cycle events are still being rolled out.\n\n```json\n{\"type\": \"get_transaction\", \"data\": {\"id\": \"abcdef123123123...\"}}\n```\n\n`data` fields:\n* `id` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** The transaction ID you're looking to track.\n\n\n### `get_table_rows` Request\n\nRetrieve a stream of changes to the tables, as a side effect of\ntransactions/actions being executed.\n\n```json\n{\"type\": \"get_table_rows\",\n \"req_id\": \"123\",\n \"listen\": true,\n \"data\": {\n   \"code\": \"eosio.token\",\n   \"scope\": \"eoscanadacom\",\n   \"table_name\": \"accounts\",\n   \"json\": true,\n   \"verbose\": true\n }\n}\n```\n\n`data` fields:\n* `code`  **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** Contract account which wrote to tables.\n* `scope`  **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)**  Table _scope_ where table is stored.\n* `table_name`  **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)**  Table _name_, shown in the contract ABI.\n* `json` **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)?** With `json=true` (or `1`), table rows will be decoded to JSON, using the ABIs active on the queried block. This endpoint will thus automatically adapt to upgrades to the ABIs on chain.\n* `verbose` **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)? Return the `code`, `table_name`, `scope` and `key` alongside each row.\n\n\n### `unlisten` Request\n\nTo interrupt a stream, you can `unlisten` with the original `req_id` like this:\n\n```json\n{\"type\": \"unlisten\", \"data\": {\"req_id\": \"original-request-id\"}}\n```\n\n`data` fields:\n* `req_id` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** The `req_id` passed to previous commands which included `listen=true`.\n"}